<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC 
	"-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yuedi.dao.ProductDao">
	<resultMap type="product"  id="productResult">
		<result property="productId" column="productId" jdbcType="BIGINT" javaType="java.lang.Long"/>
		<result property="sellerId" column="sellerId" jdbcType="BIGINT" javaType="java.lang.Long"/>
		<result property="productName" column="productName" jdbcType="VARCHAR" javaType="java.lang.String"/>
		<result property="productDesc" column="productDesc" jdbcType="VARCHAR" javaType="java.lang.String"/>
		<result property="image" column="image" jdbcType="VARCHAR" javaType="java.lang.String"/>
		<result property="createUser" column="createUser" jdbcType="VARCHAR" javaType="java.lang.String"/>
		<result property="updateUser" column="updateUser" jdbcType="VARCHAR" javaType="java.lang.String"/>
		<result property="priceOld" column="priceOld" jdbcType="DECIMAL" javaType="java.lang.Double"/>
		<result property="price" column="price" jdbcType="DECIMAL" javaType="java.lang.Double"/>
		<result property="sellersign" column="sellersign" jdbcType="INTEGER" javaType="java.lang.Integer"/>
        <result property="stock" column="stock" jdbcType="INTEGER" javaType="java.lang.Integer"/>
        <result property="isdeleteFlag" column="isdeleteFlag" jdbcType="BIT" javaType="java.lang.Integer"/>
        <result property="createTime" column="createTime" jdbcType="DATE" javaType="java.util.Date"/>
        <result property="updateTime" column="updateTime" jdbcType="DATE" javaType="java.util.Date"/>
	</resultMap>
	<insert id="insertProduct" parameterType="product" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO product
		(sellerId,
		productName,
		productDesc,
		image,
		createUser,
		updateUser,
		priceOld,
		price,
		sellersign,
		stock,
		createTime,
		updateTime,
		isdeleteFlag)
		VALUES
		(#{sellerId},
		#{productName},
		#{productDesc},
		#{image},
		#{createUser},
		#{updateUser},
		#{priceOld},
		#{price},
		#{sellersign},
		#{stock},
		#{createTime},
		#{updateTime},
		#{isdeleteFlag})
	</insert>
	<update id="updateProductbyId" parameterType="Long">
     	UPDATE product SET productDesc = #{productDesc} , productName=#{productName},price=#{price},priceOld=#{priceOld}, 
     	updateUser= #{updateUser} ,updateTime = #{updateTime} where ProductID=#{productId}
	</update>
	<select id="selectProductLimit" resultMap="productResult">
		select 
		p.productId,p.sellerId, p.productName, p.productDesc, p.image, p.createUser, p.updateUser, p.priceOld, p.price, p.sellersign, p.stock, p.createTime, p.updateTime,p.isdeleteFlag 
		from product p where 1=1
		<if test="params.sellersign != null">
			and p.sellerId = #{params.sellersign}
		</if>
		<if test="params.name != null">
			AND p.t1.productName like #{params.name}
		</if>
		order by p.productId desc
	</select>
	<select id="selectProductById" resultMap="productResult">
		select 
		p.productId,p.sellerId, p.productName, p.productDesc, p.image, p.createUser, p.updateUser, p.priceOld, p.price, p.sellersign, p.stock, p.createTime, p.updateTime,p.isdeleteFlag 
		from product p where p.productId = #{productId}
	</select>
	<update id="deleteProductbyId" parameterType="Long">
     	UPDATE product SET IsDeleteFlag = 1 where ProductID=#{productId}
	</update>
	<update id="updateIsDeleteFlagbyId" parameterType="Long">
     	UPDATE product SET IsDeleteFlag = 0 where ProductID=#{productId}
	</update>
</mapper>