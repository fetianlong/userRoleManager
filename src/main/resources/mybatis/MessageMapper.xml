<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE  mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yuedi.dao.MessageDao">
    <resultMap type="message" id="messageResult">
        <result column="id" property="id" jdbcType="BIGINT" javaType="java.lang.Long"/>
        <result column="sellerId" property="sellerId" jdbcType="BIGINT" javaType="java.lang.Long"/>
        <!-- <result column="userInfo2cId" property="userInfo2cId" jdbcType="BIGINT" javaType="java.lang.Long"/> -->
        <result column="messageContext" property="messageContext" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="applyReason" property="applyReason" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="notgoReason" property="notgoReason" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="state" property="state" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <!-- <result column="hobby" property="hobby" jdbcType="VARCHAR" javaType="java.lang.String"/> -->
        <result column="createDateTime" property="createDateTime" jdbcType="DATE" javaType="java.util.Date" />
        <result column="createrName" property="createrName" jdbcType="VARCHAR" javaType="java.lang.String" />
        <result column="applyDateTime" property="applyDateTime" jdbcType="DATE" javaType="java.util.Date" />
        <result property="messageDateTime" column="messageDateTime" jdbcType="DATE" javaType="java.util.Date"/>
        <result column="personCount" property="personCount" jdbcType="INTEGER" javaType="java.lang.Integer"/>
        <!-- <result column="messageName" property="messageName" jdbcType="VARCHAR" javaType="java.lang.String" /> -->
        <result column="province" property="province" jdbcType="BIGINT" javaType="java.lang.Long"/>
        <result column="city" property="city" jdbcType="BIGINT" javaType="java.lang.Long"/>
        <result column="area" property="area" jdbcType="BIGINT" javaType="java.lang.Long"/>
        <result column="isSuccess" property="isSuccess" jdbcType="VARCHAR" javaType="java.lang.String"/>
    </resultMap>
	<insert id="insertMessage" parameterType="message" useGeneratedKeys="true" keyProperty="id">
		    INSERT INTO message
		         (
		              sellerId
		            , messageContext
		            , applyReason
		            , state
		            , createDateTime
		            , createrName
		            , province
		            , city
		            , area
		            ,isSuccess
		         )
		    VALUES (
		           #{sellerId}
		         , #{messageContext}
		         , #{applyReason}
		         , #{state}
		         , #{createDateTime}
		         , #{createrName}
		         , #{province}
		         , #{city}
		         , #{area}
		         , #{isSuccess}
		        )
    </insert>
	<select id="findMessageByLimit" resultMap="messageResult">
        SELECT 
		t1.ID,
		t1.sellerId,t1.messageContext,t1.applyReason,t1.applyDateTime,t1.messageDateTime,t1.notgoReason,t1.state,t1.createDateTime,t1.createrName,t1.province,t1.city,t1.area,t1.personCount,
		t2.Name as 'sellerName',
		t4.area_name as 'provinceName',t5.area_name as 'cityName',t6.area_name as 'areaName'
		FROM message as t1 
		LEFT JOIN seller as t2 on t1.sellerId=t2.ID
		LEFT JOIN as_areas as t4 on t1.province = t4.ID
		LEFT JOIN as_areas as t5 on t1.city = t5.ID
		LEFT JOIN as_areas as t6 on t1.area = t6.ID
		WHERE 1=1
	    <if test="params.sellerId != null">
			AND t1.sellerId = #{params.sellerId}
		</if>
	    <if test="params.messageContext != null">
			AND t1.messageContext = #{params.messageContext}
		</if>
		<if test="params.state != null">
			AND t1.state =  #{params.state}
		</if>
		order by t1.id desc
    </select>
    <select id="findMessageByCenterLimit" resultMap="messageResult">
        SELECT 
		t1.ID,
		t1.sellerId,t1.messageContext,t1.applyReason,t1.applyDateTime,t1.messageDateTime,t1.notgoReason,t1.state,t1.createDateTime,t1.createrName,t1.province,t1.city,t1.area,t1.personCount,t1.isSuccess,
		t2.Name as 'sellerName',
		t4.area_name as 'provinceName',t5.area_name as 'cityName',t6.area_name as 'areaName'
		FROM message as t1 
		LEFT JOIN seller as t2 on t1.sellerId=t2.ID
		LEFT JOIN as_areas as t4 on t1.province = t4.ID
		LEFT JOIN as_areas as t5 on t1.city = t5.ID
		LEFT JOIN as_areas as t6 on t1.area = t6.ID
		WHERE 1=1
	    <if test="params.sellerId != null">
			AND t1.sellerId = #{params.sellerId}
		</if>
	    <if test="params.messageContext != null">
			AND t1.messageContext = #{params.messageContext}
		</if>
		<if test="params.state != null">
			AND t1.state =  #{params.state}
		</if>
		<if test="params.state == null">
			AND (t1.state =  '2'
			OR  t1.state =  '4'
			OR  t1.state =  '5')
		</if>	
		order by t1.id desc
    </select>
    <select id="findMessageById" resultMap="messageResult" parameterType="java.lang.Long">
        SELECT 
		ID,
		sellerId,messageContext,applyReason,state,personCount,isSuccess
        FROM message
        WHERE ID = #{id}
    </select>
    <update id="updateMessage" parameterType="message">
    UPDATE message
    		SET 
           messageContext=#{messageContext}
         , applyReason=#{applyReason}
	 WHERE ID = #{id}
    </update>
    <update id="updateMessageState" parameterType="message">
    UPDATE message
    		SET 
           state=#{state}
	 WHERE ID = #{id}
    </update>
     <update id="updateMessageStateAndAllpyDateTime" parameterType="message">
    UPDATE message
    		SET 
           state=#{state}
          ,applyDateTime=#{applyDateTime}
	 WHERE ID = #{id}
    </update>
    <update id="updateMessagePersonCount" parameterType="message">
    UPDATE message
    	SET 
          personCount=#{personCount}
	 WHERE ID = #{id}
    </update>
    <update id="updateMessageStateAndMessageDateTime" parameterType="message">
    UPDATE message
    		SET
    		messageDateTime = #{messageDateTime}
            ,state=#{state},isSuccess=#{isSuccess}
	 WHERE ID = #{id}
    </update>
    <update id="updateMessageStateAndNotgoReason" parameterType="message">
    UPDATE message
    		SET
    		notgoReason = #{notgoReason}
            ,state=#{state}
	 WHERE ID = #{id}
    </update>
    <delete id="deleteMessageById" parameterType="java.lang.Long">
        DELETE FROM message
        WHERE ID = #{id}
    </delete>
</mapper>