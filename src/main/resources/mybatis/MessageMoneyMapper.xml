<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE  mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yuedi.dao.MessageMoneyDao">
    <resultMap type="messageMoney" id="messageMoneyResult">
        <result column="id" property="id" jdbcType="BIGINT" javaType="java.lang.Long"/>
        <result column="sellerId" property="sellerId" jdbcType="BIGINT" javaType="java.lang.Long"/>
        <result column="messageCount" property="messageCount" jdbcType="BIGINT" javaType="java.lang.Long"/>
        <result column="surplusMessageCount" property="surplusMessageCount" jdbcType="BIGINT" javaType="java.lang.Long"/>
        <result column="money" property="money" jdbcType="FLOAT" javaType="java.lang.Float"/>
        <result property="createDateTime" column="createDateTime" jdbcType="DATE" javaType="java.util.Date"/>
        <result column="createName" property="createName" jdbcType="VARCHAR" javaType="java.lang.String" />
        <result property="updateDateTime" column="updateDateTime" jdbcType="DATE" javaType="java.util.Date"/>
        <result column="updateName" property="updateName" jdbcType="VARCHAR" javaType="java.lang.String" />
        <result column="spec" property="spec" jdbcType="VARCHAR" javaType="java.lang.String" />
    </resultMap>
	<insert id="insertMessageMoney" parameterType="messageMoney" useGeneratedKeys="true" keyProperty="id">
		    INSERT INTO messagemoney
		         (
		              sellerId
		            , messageCount
		            , surplusMessageCount
		            , money
		            , createDateTime
		            , createName
		            ,spec
		         )
		    VALUES (
		           #{sellerId}
		         , #{messageCount}
		         , #{surplusMessageCount}
		         , #{money}
		         , #{createDateTime}
		         , #{createName}
		         , #{spec}
		        )
    </insert>
    <select id="findMessageMoneyByLimit" parameterType="java.lang.Long" resultMap="messageMoneyResult">
        SELECT 
			t1.ID,
			t1.sellerId,t1.messageCount,t1.surplusMessageCount,t1.money,t1.createName,t1.createDateTime,t1.spec,
			t2.Name as 'sellerName'
		FROM messagemoney as t1 
		LEFT JOIN seller as t2 on t1.sellerId=t2.ID
		WHERE 1=1
	    <if test="params.sellerId != null">
			AND t1.sellerId = #{params.sellerId}
		</if>
		order by t1.id desc
    </select>
    <select id="findMessageMoneyById" parameterType="java.lang.Long" resultMap="messageMoneyResult">
        SELECT
         ID,sellerId,messageCount,money,createName,createDateTime,spec
		FROM messagemoney Id = #{id}
    </select>
    <update id="updateMessageMoney" parameterType="messageMoney">
	    UPDATE messagemoney
	     SET 
           messageCount=#{messageCount}
         , money=#{money}
         , updateName=#{updateName}
         , updateDateTime=#{updateDateTime}
         , spec=#{spec}
		 WHERE ID = #{id}
    </update>
</mapper>